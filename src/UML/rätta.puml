
@startuml

title UML-Diagram

    class CarController {
        ~ cars : ArrayList<Cars>
        - delay : int
        - timer : Timer
        - frame : frame
        {static} + main()
        + startAllCars()
        + stopAllCars()
        ~ brake()
        ~ collisionCheck()
        ~ gas()
        ~ liftBed()
        ~ lowerBed()
        ~ turboOff()
        ~ turboOn()
        ~ xCol()
        ~ yCol()
    }




    class CarController.TimerListener {
        + actionPerformed()
    }



    class CarService {
        # MAX_LOAD : int
        # carInService : List<T>
        # currentLoad : int
        - staticMessageToCustomer : String
        + CarService()
        + deliveryOfCar()
        + loadToService()
    }



    class CarTransport {
        - MAX_DISTANCE : int
        - MAX_LOAD : int
        - MAX_SIZE : int
        - load : Stack<Cars>
        + CarTransport()
        + lowerRamp()
        + move()
        + raiseRamp()
        # decrementSpeed()
        # incrementSpeed()
        # loadTransport()
        # offLoadTransport()
    }




    enum Ramp {
      DOWN
      UP
    }




    class CarView {
        ~ brakeButton : JButton
        ~ controlPanel : JPanel
        ~ gasAmount : int
        ~ gasButton : JButton
        ~ gasLabel : JLabel
        ~ gasPanel : JPanel
        ~ gasSpinner : JSpinner
        ~ liftBedButton : JButton
        ~ lowerBedButton : JButton
        ~ startButton : JButton
        ~ stopButton : JButton
        ~ turboOffButton : JButton
        ~ turboOnButton : JButton
        {static} - X : int
        {static} - Y : int
        + CarView()
        - initComponents()
    }




    abstract class Cars {
        # carSize : int
        - color : Color
        - currentSpeed : double
        - enginePower : double
        - modelName : String
        - nrDoors : int
        - posX : double
        - posY : double
        - CarList
        + Cars()
        + brake()
        + gas()
        + getColor()
        + getCurrentSpeed()
        + getEnginePower()
        + getNrDoors()
        + move()
        + setColor()
        + setEnginePower()
        + setNrDoors()
        + startEngine()
        + stopEngine()
        + turnLeft()
        + turnRight()
        {abstract} # decrementSpeed()
        # getDir()
        # getPosX()
        # getPosY()
        {abstract} # incrementSpeed()
        # setCurrentSpeed()
        # setPosX()
        # setPosY()
    }




    enum Direction {
      EAST
      NORTH
      SOUTH
      WEST
    }




    class DrawPanel {
        ~ CarImage : ArrayList<String>
        ~ CarPoint : List<Point>
        ~ carPoint : Point
        ~ saabImage : BufferedImage
        ~ saabPoint : Point
        ~ scaniaImage : BufferedImage
        ~ scaniaPoint : Point
        ~ volvoImage : BufferedImage
        ~ volvoPoint : Point
        + DrawPanel()
        # paintComponent()
        ~ moveit()
    }




    interface Movable {
        {abstract} + move()
        {abstract} + turnLeft()
        {abstract} + turnRight()
    }




    class PersonalCars {
        + decrementSpeed()
        # PersonalCars()
        # incrementSpeed()
    }




    class Saab95 {
        - turboOn : boolean
        + Saab95()
        + decrementSpeed()
        + isTurboOn()
        + setTurboOff()
        + setTurboOn()
        # incrementSpeed()
        - speedFactor()
    }




    class Scania {
        + flatBedAngle : int
        + Scania()
        + decreaseFlatBed()
        + increaseFlatBed()
        # decrementSpeed()
        # incrementSpeed()
        - adjustBedAngle()
   }




    abstract class Trucks {
        + Trucks()
    }




    class Volvo240 {
        {static} - trimFactor : double
        + Volvo240()
        + decrementSpeed()
        # incrementSpeed()
        - speedFactor()
    }


   Class CarList{
    + CarList
     }

  CarView o-- CarController : frame
  CarController +-down- CarController.TimerListener
  CarTransport -up-|> Trucks
  CarTransport o-- Ramp : ramp
  CarView --o DrawPanel : drawPanel
  Cars .up.|> Movable
  Cars --> Direction : dir
  CarView ...> CarList

  PersonalCars -up-|> Cars
  Saab95 -up-|> PersonalCars
  Scania -up-|> Trucks
  Trucks -up-|> Cars
  Volvo240 -up-|> PersonalCars
  CarService ...> Cars
  CarController ...> CarList
  CarList ...> Cars






@enduml

